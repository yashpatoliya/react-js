{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yash Patoliya\\\\Documents\\\\REACT\\\\projects of react\\\\12-routing-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './pages/root';\nimport HomePage from './pages/home';\nimport EventPage from './pages/event';\nimport { Router } from 'react-router';\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: RootLayout,\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RootLayout","HomePage","EventPage","Router","router","path","element","children","App"],"sources":["C:/Users/Yash Patoliya/Documents/REACT/projects of react/12-routing-project/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './pages/root'\nimport HomePage from './pages/home';\nimport EventPage from './pages/event';\nimport { Router } from 'react-router';\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path:'/',\n    element : RootLayout,\n    children : [\n      {\n        path: '/', element: <HomePage/>,\n      },\n      {\n        path: '/events', element:<EventPage />\n      }\n    ]\n  }\n])\n\nfunction App() {\n  return <Router router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,MAAM,eAAe;AACrC,SAASC,MAAM,QAAQ,cAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,MAAM,GAAGL,mBAAmB,CAAC,CACjC;EACEM,IAAI,EAAC,GAAG;EACRC,OAAO,EAAGN,UAAU;EACpBO,QAAQ,EAAG,CACT;IACEF,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAC/B,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAC,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA;EACrC,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASE,GAAG,GAAG;EACb,oBAAO,QAAC,MAAM;IAAC,MAAM,EAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE;AAClC;AAAC,KAFQI,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}