{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yash Patoliya\\\\Documents\\\\REACT\\\\projects of react\\\\12-routing-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider,\n// createRoutesFromElements,\ncreateBrowserRouter, Route } from \"react-router-dom\";\n// import RootLayout from \"./pages/root\";\nimport HomePage from \"./pages/home\";\nimport EventPage from \"./pages/event\";\nimport MainNavigation from \"./components/MainNavigation\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: RootLayout,\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }, this)\n  }]\n}]);\n// const routeDefinitions = createRoutesFromElements(\n//   <Route>\n//     <Route path=\"/\" element={<HomePage />} />\n//     <Route path=\"/events\" element={<EventPage />} />\n//   </Route>\n// );\n// const router = createBrowserRouter(routeDefinitions);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Route","HomePage","EventPage","MainNavigation","router","path","element","RootLayout","children","App"],"sources":["C:/Users/Yash Patoliya/Documents/REACT/projects of react/12-routing-project/frontend/src/App.js"],"sourcesContent":["import {\n  RouterProvider,\n  // createRoutesFromElements,\n  createBrowserRouter,\n  Route,\n} from \"react-router-dom\";\n// import RootLayout from \"./pages/root\";\nimport HomePage from \"./pages/home\";\nimport EventPage from \"./pages/event\";\nimport MainNavigation from \"./components/MainNavigation\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path:'/',\n    element : RootLayout,\n    children : [\n      {\n        path: '/', element: <HomePage/>,\n      },\n      {\n        path: '/events', element:<EventPage />\n      }\n    ],\n  }\n]);\n// const routeDefinitions = createRoutesFromElements(\n//   <Route>\n//     <Route path=\"/\" element={<HomePage />} />\n//     <Route path=\"/events\" element={<EventPage />} />\n//   </Route>\n// );\n// const router = createBrowserRouter(routeDefinitions);\nfunction App() {\n  return (\n    <>\n      {/* <MainNavigation /> */}\n      <RouterProvider router={router} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,cAAc;AACd;AACAC,mBAAmB,EACnBC,KAAK,QACA,kBAAkB;AACzB;AACA,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,cAAc,MAAM,6BAA6B;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,MAAM,GAAGL,mBAAmB,CAAC,CACjC;EACEM,IAAI,EAAC,GAAG;EACRC,OAAO,EAAGC,UAAU;EACpBC,QAAQ,EAAG,CACT;IACEH,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAC/B,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAC,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA;EACrC,CAAC;AAEL,CAAC,CACF,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,GAAG,GAAG;EACb,oBACE;IAAA,uBAEE,QAAC,cAAc;MAAC,MAAM,EAAEL;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG,iBACjC;AAEP;AAAC,KAPQK,GAAG;AASZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}