{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yash Patoliya\\\\Documents\\\\REACT\\\\projects of react\\\\12-routing-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createRoutesFromElements, createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './pages/root';\nimport HomePage from './pages/home';\nimport EventPage from './pages/event';\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// const router = createBrowserRouter([\n//   {\n//     path:'/',\n//     element : RootLayout,\n//     children : [\n//       {\n//         path: '/', element: <HomePage/>,\n//       },\n//       {\n//         path: '/events', element:<EventPage />\n//       }\n//     ],\n//   }\n// ]);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeDefinitions = createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/products\",\n    element: /*#__PURE__*/_jsxDEV(ProductsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this));\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createRoutesFromElements","createBrowserRouter","RootLayout","HomePage","EventPage","routeDefinitions","App","router"],"sources":["C:/Users/Yash Patoliya/Documents/REACT/projects of react/12-routing-project/frontend/src/App.js"],"sourcesContent":["import { RouterProvider , createRoutesFromElements , createBrowserRouter } from 'react-router-dom';\nimport RootLayout from './pages/root'\nimport HomePage from './pages/home';\nimport EventPage from './pages/event';\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// const router = createBrowserRouter([\n//   {\n//     path:'/',\n//     element : RootLayout,\n//     children : [\n//       {\n//         path: '/', element: <HomePage/>,\n//       },\n//       {\n//         path: '/events', element:<EventPage />\n//       }\n//     ],\n//   }\n// ]);\nconst routeDefinitions = createRoutesFromElements(\n  <Route>\n    <Route path=\"/\" element={<HomePage />} />\n    <Route path=\"/products\" element={<ProductsPage />} />\n  </Route>\n);\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,cAAc,EAAGC,wBAAwB,EAAGC,mBAAmB,QAAQ,kBAAkB;AAClG,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,MAAM,eAAe;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,MAAMC,gBAAgB,GAAGL,wBAAwB,eAC/C,QAAC,KAAK;EAAA,wBACJ,QAAC,KAAK;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAG,eACzC,QAAC,KAAK;IAAC,IAAI,EAAC,WAAW;IAAC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA;EAAA;EAAA;EAAA;AAAA,QAC/C,CACT;AAED,SAASM,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE;AAC1C;AAAC,KAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}