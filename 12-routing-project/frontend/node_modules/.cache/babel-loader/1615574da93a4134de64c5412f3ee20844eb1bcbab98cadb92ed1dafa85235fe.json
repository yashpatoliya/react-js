{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yash Patoliya\\\\Documents\\\\REACT\\\\projects of react\\\\12-routing-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createRoutesFromElements, createBrowserRouter, Route } from \"react-router-dom\";\nimport RootLayout from \"./pages/root\";\nimport HomePage from \"./pages/home\";\nimport EventPage from \"./pages/event\";\nimport MainNavigation from \"./components/MainNavigation\";\nimport { Fragment } from \"react\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// const router = createBrowserRouter([\n//   {\n//     path:'/',\n//     element : RootLayout,\n//     children : [\n//       {\n//         path: '/', element: <HomePage/>,\n//       },\n//       {\n//         path: '/events', element:<EventPage />\n//       }\n//     ],\n//   }\n// ]);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routeDefinitions = createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this));\nconst router = createBrowserRouter(routeDefinitions);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createRoutesFromElements","createBrowserRouter","Route","RootLayout","HomePage","EventPage","MainNavigation","Fragment","routeDefinitions","router","App"],"sources":["C:/Users/Yash Patoliya/Documents/REACT/projects of react/12-routing-project/frontend/src/App.js"],"sourcesContent":["import {\n  RouterProvider,\n  createRoutesFromElements,\n  createBrowserRouter,\n  Route,\n} from \"react-router-dom\";\nimport RootLayout from \"./pages/root\";\nimport HomePage from \"./pages/home\";\nimport EventPage from \"./pages/event\";\nimport MainNavigation from \"./components/MainNavigation\";\nimport { Fragment } from \"react\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// const router = createBrowserRouter([\n//   {\n//     path:'/',\n//     element : RootLayout,\n//     children : [\n//       {\n//         path: '/', element: <HomePage/>,\n//       },\n//       {\n//         path: '/events', element:<EventPage />\n//       }\n//     ],\n//   }\n// ]);\nconst routeDefinitions = createRoutesFromElements(\n    <Route>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/events\" element={<EventPage />} />\n    </Route>\n);\nconst router = createBrowserRouter(routeDefinitions);\nfunction App() {\n  return <>\n  </>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,cAAc,EACdC,wBAAwB,EACxBC,mBAAmB,EACnBC,KAAK,QACA,kBAAkB;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA,MAAMC,gBAAgB,GAAGR,wBAAwB,eAC7C,QAAC,KAAK;EAAA,wBACJ,QAAC,KAAK;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAG,eACzC,QAAC,KAAK;IAAC,IAAI,EAAC,SAAS;IAAC,OAAO,eAAE,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA;EAAA;EAAA;EAAA;AAAA,QAC1C,CACX;AACD,MAAMS,MAAM,GAAGR,mBAAmB,CAACO,gBAAgB,CAAC;AACpD,SAASE,GAAG,GAAG;EACb,oBAAO,qCACJ;AACL;AAAC,KAHQA,GAAG;AAKZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}